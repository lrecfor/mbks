Реализовать серверную и клиентскую часть приложения, которые удовлетрояют следующим требованиям:

Сервер:
- обслуживание n клиентов одновременно (select\threads)	при этом потоки необходимо синхронизировать DONE
- авторизация пользователей: пароль должен быть хеширован, хеши сравниваются на стороне сервера для авторизации DONE
- информация о логине\разлогине (аудит) DONE
- корректная поддержка отключения пользователя (в случае отключения по протоколу и нет) DONE

- реализовать любым путем корректную передачу больших данных по сети: нужно учитывать, что стандартные сокеты не понимают, пришли ли все данные или нет, и recv() вернет ровно столько, сколько в буфере было на момент вызова функций -> при плохом соединении необходимо каким-то образом контролировать, пришли ли все данные или нет (протокол\единая неизменная схема передачи данных)
- организовать атомарность операций сервера: например, файл пользователя либо записался полностью, либо не записался вообще

- добавить поддержку опции единственной сессии: нельзя одновременно использовать 1 учетную запись для 2 и более экземпляров клиента DONE
- также для каждого пользователя при подключении (создании) должны создаваться домашние каталоги, по аналогии с /home в unix DONE

Нагрузка сервера:
Пользователь посылает команды серверу, которое обрабатываются ИСКЛЮЧИТЕЛЬНО на стороне СЕРВЕРА, то есть клиент посылает запрос, и ждет только ответ.
Реализовать следующие команды для клиента:
- запись в файл: write [filename] [text] DONE
- чтение из файла: read [file1] DONE
- справка: help [cmd] DONE
- листинг директории: ls [dir] DONE
- отключение: logout DONE

Также есть опции для администратора, для которого должен быть реализован интерфейс на сервере:
- добавлять пользователей в систему, записывая их логин, пароль DONE
- удалять юзера по логину (при удалении пользователя необходимо удалять и его домашнюю директорию) DONE
- менять пароль пользователю DONE
- посмотреть информацию обо всех пользователях	DONE

Клиент: 
- реализовать удобный интерфейс для пользователя
- реализовать подключение к серверу
- IP-адрес и порт вводятся в клиент каждый раз 
- реализовать показ текущей директории (либо на сервере должна быть команда pwd) DONE
- реализовать обмен всеми данными по протоколу\единой схеме


Условная схема работы:

Client                                           Server

 userLogin -------------------------------------> 
                                                 проверка на наличие
 your password? <--------------------------------

 userPass -------------------------------------->
						 проверка на правильность
 потдверждение об <------------------------------
 успехе логина  

 ls -------------------------------------------->
						 составить список файлов
 список файлов <---------------------------------

			..............